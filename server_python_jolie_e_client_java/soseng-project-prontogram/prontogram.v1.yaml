openapi: 3.0.0
info:
  title: prontogramAPI
  version: '1.0'
  description: È l'API Restful offerta dall'applicazione di messaggistica *Prontogram* che vi racchiude la capability di inoltrare i messaggi circa le offerte inviate da ACMESky ai clienti interessati.
servers:
  - url: 'https://soseng-unibo.stoplight.io/mocks/soseng-unibo/soseng-project-documentation/6636887'
    description: testing
paths:
  /register:
    post:
      summary: Registra un nuovo utente
      operationId: post-register
      description: Registra un nuovo utente; prende in input solo un nome utente e una password
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          headers: {}
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '500':
          description: Server Error
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
            examples:
              Esempio:
                value:
                  data:
                    username: mrossi85
                    password: 12345678
  /message:
    get:
      summary: Restituisci tutti i messaggi
      tags:
        - Risorse
      operationId: post-allmessage
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce tutti i messaggi (in blocchi di cardinalità 20) accessibili al fruitore (utente o ACMESky) identificato da quel token: in dettaglio, l'utente ha accesso solo ai messaggi di cui è destinatario, mentre ACMESky ha accesso a tutti i messaggi che ha inoltrato ai suoi utenti mediante Prontogram (potrebbe richiederli per fini statistici, ad esempio).

        Il body della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: con la risposta sono restituiti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
      security:
        - tokenSessione: []
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                description: ''
                type: object
                properties:
                  links:
                    type: object
                    description: Link a livello dei blocchi di messaggi
                    properties:
                      self:
                        type: string
                        description: Link al blocco corrente
                      next:
                        type: string
                        description: Link al blocco successivo in senso temporale
                      prev:
                        type: string
                        description: Link al blocco precedente in senso temporale
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: object
                          properties:
                            offer:
                              $ref: '#/components/schemas/offerMessage'
                            receiver:
                              type: string
                            date:
                              type: string
                            id:
                              type: integer
                        links:
                          type: object
                          description: Link a livello dei singoli messaggiLink a livello dei singoli messaggi
                          properties:
                            self:
                              type: string
                              description: Link al messaggio corrente
                            next:
                              type: string
                              description: Link a messaggio successivo in senso temporale
                            prev:
                              type: string
                              description: Link al messaggio precedente in senso temporale
              examples:
                /message/mariorossi:
                  value:
                    links:
                      self: /message/mariorossi/from/0
                      next: /message/mariorossi/from/10
                      prev: /message/mariorossi/from/0
                    data:
                      - message:
                          body: 'nuova offerta, codice 1234'
                          receiver: mariorossi
                          date: '2020-03-02, 16:06 CET'
                        links:
                          self: /message/mariorossi/0
                          next: /message/mariorossi/1
                          prev: /message/mariorossi/0
                      - message:
                          offer:
                            description: 'Roma - Berlino, Classe Premium'
                            code: '1234'
                          receiver: mariorossi
                          date: '2020-03-05, 12:06 CET'
                        links:
                          self: /message/mariorossi/1
                          next: /message/mariorossi/2
                          prev: /message/mariorossi/0
                /message/mariorossi/4:
                  value:
                    links:
                      self: /message/mariorossi/4
                      next: /message/mariorossi/5
                      prev: /message/mariorossi/3
                    data:
                      - message:
                          offer:
                            description: 'Roma - Berlino, Classe Premium'
                            code: '1234'
                          receiver: mariorossi
                          date: '2020-03-02, 16:06 CET'
                        links:
                          self: /message/mariorossi/4
                          next: /message/mariorossi/5
                          prev: /message/mariorossi/3
        '400':
          description: Bad Request
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
  /createmessage:
    post:
      summary: Invia messaggio
      operationId: post-createmessage
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          headers: {}
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
      description: 'È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, invia un messaggio il cui corpo e destinatario sono quelli specificati nel body della richiesta HTTP.'
      security:
        - tokenSessione: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              description: ''
              type: object
              title: message
              properties:
                data:
                  type: object
                  properties:
                    receiver:
                      type: string
                    offer:
                      $ref: '#/components/schemas/offerMessage'
            examples:
              Esempio:
                value:
                  data:
                    receiver: Mario rossi
                    offer:
                      description: 'Roma - Berlino, 20/12/2021, 200$, ryanair1234'
                      code: '1234'
        description: Il body della richiesta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson.
      tags:
        - Risorse

  /createmessages:
    post:
      summary: Invia messaggi
      operationId: post-createmessages
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          headers: {}
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
      description: 'È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, invia un messaggio il cui corpo e destinatario sono quelli specificati nel body della richiesta HTTP. A differenza di /createmessage, questo endpoint supporta l''invio di più messaggi alla volta'
      security:
        - tokenSessione: []
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              description: ''
              type: object
              title: message_list
              properties:
                messages:
                  type: array
                  items:
                    title: message_item
                    type: object
                    properties:
                      receiver:
                        type: string
                      offer:
                        $ref: '#/components/schemas/offerMessage'
            examples:
              Esempio:
                value:
                  message_list:
                    - message_item:
                        receiver: Mario Neri
                        offer:
                          description: 'Roma - Berlino, 20/12/2021, 200$, ryanair123'
                          code: '1234'
                    - message_item:
                        receiver: Mario Bianchi
                        offer:
                          description: 'Bologna - Madrid, 20/12/2021, 150$, ryanair456'
                          code: '7890'
        description: Il body della richiesta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson.
      tags:
        - Risorse

  '/message/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: Username dell'utente
    get:
      summary: Restituisci i primi 10 messaggi del cliente
      tags:
        - Risorse
      responses:
        '308':
          description: Permanent Redirect (experiemental)
          headers:
            Location:
              schema:
                type: string
              description: '/message/{username}/from/0'
        '400':
          description: Bad Request
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
      operationId: get-message-username
      security:
        - tokenSessione: []
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce i primi 20 messaggi inviati al cliente il cui username è pari al parametro di query `username`.

        In caso la richiesta HTTP abbia esito positivo, la risposta è un reindirizzamento alla risorsa `/message/{username}/from/0`
  '/message/{username}/from/{messageid}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: Username dell'utente
      - schema:
          type: string
        name: messageid
        in: path
        required: true
        description: Id del messaggio
    get:
      summary: Restituisci 10 messaggi del cliente
      tags:
        - Risorse
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    description: ''
                    properties:
                      message:
                        type: array
                        #uniqueItems: true
                        items:
                          type: object
                          properties:
                            offer:
                              $ref: '#/components/schemas/offerMessage'
                            date:
                              type: string
                            links:
                              type: object
                              description: Link a livello dei singoli messaggi
                              properties:
                                self:
                                  type: string
                                  description: Link a messaggio corrente
                                next:
                                  type: string
                                  description: Link a messaggio successivo in senso temporale
                                prev:
                                  type: string
                                  description: Link a messaggio precedente in senso temporale
                            id:
                              type: integer
                  links:
                    type: object
                    description: Link a livello dei blocchi di messaggi
                    properties:
                      self:
                        type: string
                        description: Link al blocco corrente in senso temporale
                      next:
                        type: string
                        description: Link al blocco successivo in senso temporale
                      prev:
                        type: string
                        description: Link al blocco precedente in senso temporale
              examples:
                Esempio:
                  value:
                    data:
                      message:
                        - sender: ACMEsky
                          offer:
                            description: 'Roma - Berlino, Classe Premium'
                            code: '1234'
                          date: '2021-03-04, 21:25 CET'
                          links:
                            self: /message/mariorossi/0
                            next: /message/mariorossi/1
                            prev: /message/mariorossi/0
                        - sender: ACMEsky
                          body:
                            description: 'Roma - Parigi, Classe Base'
                            code: '5678'
                          date: '2021-03-04, 21:25 CET'
                          links:
                            self: /message/mariorossi/1
                            next: /message/mariorossi/2
                            prev: /message/mariorossi/0
                    links:
                      self: /message/mariorossi/from/0
                      next: /message/mariorossi/from/10
                      prev: /message/mariorossi/from/0
        '400':
          description: Bad Request
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
      operationId: get-message-username-from-messageid
      security:
        - tokenSessione: []
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce i 10 messaggi successivi a quello con id pari al parametro di query `messageId` e inviati al cliente il cui username è pari al parametro di query `username`.

        Il body della richiesta e della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: nella risposta sono presenti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
  '/message/{username}/{messageid}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: Username dell'utente
      - schema:
          type: string
        name: messageid
        in: path
        required: true
        description: Id del messaggio
    get:
      summary: Restituisci il messaggio del cliente
      tags:
        - Risorse
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      offer:
                        $ref: '#/components/schemas/offerMessage'
                      date:
                        type: string
                      id:
                        type: integer
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        description: Link al messaggio corrente
                      next:
                        type: string
                        description: Link a messaggio successivo in senso temporale
                      prev:
                        type: string
                        description: Link a messaggio precedente in senso temporale
              examples:
                Esempio:
                  value:
                    data:
                      sender: ACMEsky
                      offer:
                        description: 'Roma - Berlino, 20/12/2021, 200$, ryanair1234'
                        code: '1234'
                      date: '2021-03-04, 21:25 CET'
                    links:
                      self: /message/mariorossi/1
                      next: /message/mariorossi/2
                      prev: /message/mariorossi/0
                    meta:
                      id: 1234
        '400':
          description: Bad Request
        '406':
          description: Not Acceptable
      operationId: get-message-username-messageid
      security:
        - tokenSessione: []
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce il messaggio con id pari al parametro di query `messageid` inviato al cliente il cui username è pari al parametro di query `username`.

        Il body della richiesta e della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: nella risposta sono presenti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
  /login:
    post:
      summary: Autentica un cliente
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiration_date:
                    type: string
              examples:
                Esempio:
                  value:
                    token: bWFnZ2llOnN1bW1lcnM=
                    expiration_date: '2020-03-02, 16:06 CET'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: 'È la risorsa che permette al cliente o ad ACMESky di ottenere il token temporaneo tramite cui potranno essere identificati e autorizzati da Prontogram.'

      tags:
        - Risorse
      security:
        - basicAuth: []

components:
  securitySchemes:
    tokenSessione:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
  schemas:
    offerMessage:
      title: offerMessage
      type: object
      description: Parte del messaggio relativa all'offerta.
      properties:
        code:
          type: string
          description: Codice identificativo della coppia cliente destinatario - offerta
        description:
          type: string
          description: Breve descrizione dell'offerta
    Maps.v1_Credentials:
      title: credentials
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    RegisterBody:
      title: RegisterBody
      description: Body della richiesta di registrazione
      type: object
      properties:
        username:
          type: string
        password:
          type: string
  parameters:
    AuthorizationOauth2:
      name: AuthorizationOauth2
      in: header
      required: true
      schema:
        type: string
      description: 'Il valore deve essere il token che il cliente ha ricevuto durante la registrazione, preceduto da `Bearer`'
