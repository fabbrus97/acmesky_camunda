/*
 * compagniaAereaAPI
 * Ãˆ l'API Restful offerta dalla compagnia aerea che permette di restituire le offerte attive, creare voli last minute e di ricevere la quota del pagamento del cliente.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LMflightFlightPrice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LMflightFlight
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-06T11:44:12.432+02:00[Europe/Rome]")
public class LMflightFlight {
  @SerializedName("departure-from")
  private String departureFrom = null;

  @SerializedName("takeoff")
  private String takeoff = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("price")
  private LMflightFlightPrice price = null;

  @SerializedName("offer_code")
  private String offerCode = null;

  public LMflightFlight departureFrom(String departureFrom) {
    this.departureFrom = departureFrom;
    return this;
  }

   /**
   * Get departureFrom
   * @return departureFrom
  **/
  @Schema(description = "")
  public String getDepartureFrom() {
    return departureFrom;
  }

  public void setDepartureFrom(String departureFrom) {
    this.departureFrom = departureFrom;
  }

  public LMflightFlight takeoff(String takeoff) {
    this.takeoff = takeoff;
    return this;
  }

   /**
   * Get takeoff
   * @return takeoff
  **/
  @Schema(description = "")
  public String getTakeoff() {
    return takeoff;
  }

  public void setTakeoff(String takeoff) {
    this.takeoff = takeoff;
  }

  public LMflightFlight destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @Schema(description = "")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public LMflightFlight price(LMflightFlightPrice price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public LMflightFlightPrice getPrice() {
    return price;
  }

  public void setPrice(LMflightFlightPrice price) {
    this.price = price;
  }

  public LMflightFlight offerCode(String offerCode) {
    this.offerCode = offerCode;
    return this;
  }

   /**
   * Codice identificativo dell&#x27;offerta
   * @return offerCode
  **/
  @Schema(description = "Codice identificativo dell'offerta")
  public String getOfferCode() {
    return offerCode;
  }

  public void setOfferCode(String offerCode) {
    this.offerCode = offerCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LMflightFlight lmflightFlight = (LMflightFlight) o;
    return Objects.equals(this.departureFrom, lmflightFlight.departureFrom) &&
        Objects.equals(this.takeoff, lmflightFlight.takeoff) &&
        Objects.equals(this.destination, lmflightFlight.destination) &&
        Objects.equals(this.price, lmflightFlight.price) &&
        Objects.equals(this.offerCode, lmflightFlight.offerCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(departureFrom, takeoff, destination, price, offerCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LMflightFlight {\n");
    
    sb.append("    departureFrom: ").append(toIndentedString(departureFrom)).append("\n");
    sb.append("    takeoff: ").append(toIndentedString(takeoff)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    offerCode: ").append(toIndentedString(offerCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
