/*
 * compagniaAereaAPI
 * Ãˆ l'API Restful offerta dalla compagnia aerea che permette di restituire le offerte attive, creare voli last minute e di ricevere la quota del pagamento del cliente.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NotifypaymentAmountPayed;
import io.swagger.client.model.NotifypaymentCustomer;
import io.swagger.client.model.NotifypaymentTransaction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * NotifypaymentBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-06T11:44:12.432+02:00[Europe/Rome]")
public class NotifypaymentBody {
  @SerializedName("offer_code")
  private String offerCode = null;

  @SerializedName("customer")
  private NotifypaymentCustomer customer = null;

  @SerializedName("amount_payed")
  private NotifypaymentAmountPayed amountPayed = null;

  @SerializedName("transaction")
  private NotifypaymentTransaction transaction = null;

  public NotifypaymentBody offerCode(String offerCode) {
    this.offerCode = offerCode;
    return this;
  }

   /**
   * Codice identificativo dell&#x27;offerta
   * @return offerCode
  **/
  @Schema(description = "Codice identificativo dell'offerta")
  public String getOfferCode() {
    return offerCode;
  }

  public void setOfferCode(String offerCode) {
    this.offerCode = offerCode;
  }

  public NotifypaymentBody customer(NotifypaymentCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public NotifypaymentCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(NotifypaymentCustomer customer) {
    this.customer = customer;
  }

  public NotifypaymentBody amountPayed(NotifypaymentAmountPayed amountPayed) {
    this.amountPayed = amountPayed;
    return this;
  }

   /**
   * Get amountPayed
   * @return amountPayed
  **/
  @Schema(description = "")
  public NotifypaymentAmountPayed getAmountPayed() {
    return amountPayed;
  }

  public void setAmountPayed(NotifypaymentAmountPayed amountPayed) {
    this.amountPayed = amountPayed;
  }

  public NotifypaymentBody transaction(NotifypaymentTransaction transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @Schema(description = "")
  public NotifypaymentTransaction getTransaction() {
    return transaction;
  }

  public void setTransaction(NotifypaymentTransaction transaction) {
    this.transaction = transaction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotifypaymentBody notifypaymentBody = (NotifypaymentBody) o;
    return Objects.equals(this.offerCode, notifypaymentBody.offerCode) &&
        Objects.equals(this.customer, notifypaymentBody.customer) &&
        Objects.equals(this.amountPayed, notifypaymentBody.amountPayed) &&
        Objects.equals(this.transaction, notifypaymentBody.transaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offerCode, customer, amountPayed, transaction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotifypaymentBody {\n");
    
    sb.append("    offerCode: ").append(toIndentedString(offerCode)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    amountPayed: ").append(toIndentedString(amountPayed)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
