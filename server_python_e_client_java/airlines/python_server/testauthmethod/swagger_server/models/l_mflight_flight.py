# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.l_mflight_flight_price import LMflightFlightPrice  # noqa: F401,E501
from swagger_server import util


class LMflightFlight(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, departure_from: str=None, takeoff: str=None, destination: str=None, price: LMflightFlightPrice=None, offer_code: str=None):  # noqa: E501
        """LMflightFlight - a model defined in Swagger

        :param departure_from: The departure_from of this LMflightFlight.  # noqa: E501
        :type departure_from: str
        :param takeoff: The takeoff of this LMflightFlight.  # noqa: E501
        :type takeoff: str
        :param destination: The destination of this LMflightFlight.  # noqa: E501
        :type destination: str
        :param price: The price of this LMflightFlight.  # noqa: E501
        :type price: LMflightFlightPrice
        :param offer_code: The offer_code of this LMflightFlight.  # noqa: E501
        :type offer_code: str
        """
        self.swagger_types = {
            'departure_from': str,
            'takeoff': str,
            'destination': str,
            'price': LMflightFlightPrice,
            'offer_code': str
        }

        self.attribute_map = {
            'departure_from': 'departure-from',
            'takeoff': 'takeoff',
            'destination': 'destination',
            'price': 'price',
            'offer_code': 'offer_code'
        }
        self._departure_from = departure_from
        self._takeoff = takeoff
        self._destination = destination
        self._price = price
        self._offer_code = offer_code

    @classmethod
    def from_dict(cls, dikt) -> 'LMflightFlight':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LMflight_flight of this LMflightFlight.  # noqa: E501
        :rtype: LMflightFlight
        """
        return util.deserialize_model(dikt, cls)

    @property
    def departure_from(self) -> str:
        """Gets the departure_from of this LMflightFlight.


        :return: The departure_from of this LMflightFlight.
        :rtype: str
        """
        return self._departure_from

    @departure_from.setter
    def departure_from(self, departure_from: str):
        """Sets the departure_from of this LMflightFlight.


        :param departure_from: The departure_from of this LMflightFlight.
        :type departure_from: str
        """

        self._departure_from = departure_from

    @property
    def takeoff(self) -> str:
        """Gets the takeoff of this LMflightFlight.


        :return: The takeoff of this LMflightFlight.
        :rtype: str
        """
        return self._takeoff

    @takeoff.setter
    def takeoff(self, takeoff: str):
        """Sets the takeoff of this LMflightFlight.


        :param takeoff: The takeoff of this LMflightFlight.
        :type takeoff: str
        """

        self._takeoff = takeoff

    @property
    def destination(self) -> str:
        """Gets the destination of this LMflightFlight.


        :return: The destination of this LMflightFlight.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination: str):
        """Sets the destination of this LMflightFlight.


        :param destination: The destination of this LMflightFlight.
        :type destination: str
        """

        self._destination = destination

    @property
    def price(self) -> LMflightFlightPrice:
        """Gets the price of this LMflightFlight.


        :return: The price of this LMflightFlight.
        :rtype: LMflightFlightPrice
        """
        return self._price

    @price.setter
    def price(self, price: LMflightFlightPrice):
        """Sets the price of this LMflightFlight.


        :param price: The price of this LMflightFlight.
        :type price: LMflightFlightPrice
        """

        self._price = price

    @property
    def offer_code(self) -> str:
        """Gets the offer_code of this LMflightFlight.

        Codice identificativo dell'offerta  # noqa: E501

        :return: The offer_code of this LMflightFlight.
        :rtype: str
        """
        return self._offer_code

    @offer_code.setter
    def offer_code(self, offer_code: str):
        """Sets the offer_code of this LMflightFlight.

        Codice identificativo dell'offerta  # noqa: E501

        :param offer_code: The offer_code of this LMflightFlight.
        :type offer_code: str
        """

        self._offer_code = offer_code
