openapi: 3.0.0
info:
  description: È l'API Restful offerta dall'applicazione di messaggistica *Prontogram*
    che vi racchiude la capability di inoltrare i messaggi circa le offerte inviate
    da ACMESky ai clienti interessati.
  title: prontogramAPI
  version: "1.0"
servers:
- description: testing
  url: https://soseng-unibo.stoplight.io/mocks/soseng-unibo/soseng-project-documentation/6636887
paths:
  /createmessage:
    post:
      description: È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione
        vi è un `token` identificativo valido, invia un messaggio il cui corpo e destinatario
        sono quelli specificati nel body della richiesta HTTP.
      operationId: post_createmessage
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/vnd.api+json:
            examples:
              Esempio:
                value:
                  data:
                    receiver: Mario rossi
                    offer:
                      description: Roma - Berlino, Classe Premium
                      code: "1234"
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_createmessage_data'
              type: object
        description: Il body della richiesta HTTP è di tipo `application/vnd.api+json`
          in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson.
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
      security:
      - tokenSessione: []
      summary: Invia messaggio
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
  /login:
    post:
      description: È la risorsa che permette al cliente o ad ACMESky di ottenere il
        token temporaneo tramite cui potranno essere identificati e autorizzati da
        Prontogram.
      operationId: post_login
      requestBody:
        content:
          application/json:
            examples:
              Esempio:
                value:
                  username: Mario
                  password: st1222a2aring
            schema:
              $ref: '#/components/schemas/Maps.v1_Credentials'
      responses:
        "200":
          content:
            application/json:
              examples:
                Esempio:
                  value:
                    token: bWFnZ2llOnN1bW1lcnM=
                    expiration_date: 2020-03-02, 16:06 CET
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Autentica un cliente
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
  /message:
    get:
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce tutti i messaggi (in blocchi di cardinalità 20) accessibili al fruitore (utente o ACMESky) identificato da quel token: in dettaglio, l'utente ha accesso solo ai messaggi di cui è destinatario, mentre ACMESky ha accesso a tutti i messaggi che ha inoltrato ai suoi utenti mediante Prontogram (potrebbe richiederli per fini statistici, ad esempio).

        l body della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: con la risposta sono restituiti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
      operationId: post_allmessage
      responses:
        "200":
          content:
            application/vnd.api+json:
              examples:
                /message/mariorossi:
                  value:
                    links:
                      self: /message/mariorossi/from/0
                      next: /message/mariorossi/from/10
                      prev: /message/mariorossi/from/0
                    data:
                    - message:
                        body: nuova offerta, codice 1234
                        receiver: mariorossi
                        date: 2020-03-02, 16:06 CET
                      links:
                        self: /message/mariorossi/0
                        next: /message/mariorossi/1
                        prev: /message/mariorossi/0
                    - message:
                        offer:
                          description: Roma - Berlino, Classe Premium
                          code: "1234"
                        receiver: mariorossi
                        date: 2020-03-05, 12:06 CET
                      links:
                        self: /message/mariorossi/1
                        next: /message/mariorossi/2
                        prev: /message/mariorossi/0
                /message/mariorossi/4:
                  value:
                    links:
                      self: /message/mariorossi/4
                      next: /message/mariorossi/5
                      prev: /message/mariorossi/3
                    data:
                    - message:
                        offer:
                          description: Roma - Berlino, Classe Premium
                          code: "1234"
                        receiver: mariorossi
                        date: 2020-03-02, 16:06 CET
                      links:
                        self: /message/mariorossi/4
                        next: /message/mariorossi/5
                        prev: /message/mariorossi/3
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
        "400":
          description: Bad Request
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
      security:
      - tokenSessione: []
      summary: Restituisci tutti i messaggi
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
  /message/{username}:
    get:
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce i primi 20 messaggi inviati al cliente il cui username è pari al parametro di query `username`.

        In caso la richiesta HTTP abbia esito positivo, la risposta è un reindirizzamento alla risorsa `/message/{username}/from/0`
      operationId: get_message_username
      parameters:
      - description: Username dell'utente
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "308":
          description: Permanent Redirect (experiemental)
          headers:
            Location:
              description: /message/{username}/from/0
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
      security:
      - tokenSessione: []
      summary: Restituisci i primi 10 messaggi del cliente
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
  /message/{username}/from/{messageid}:
    get:
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce i 10 messaggi successivi a quello con id pari al parametro di query `messageId` e inviati al cliente il cui username è pari al parametro di query `username`.

        Il body della richiesta e della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: nella risposta sono presenti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
      operationId: get_message_username_from_messageid
      parameters:
      - description: Username dell'utente
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: Id del messaggio
        explode: false
        in: path
        name: messageid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              examples:
                Esempio:
                  value:
                    data:
                      message:
                      - sender: ACMEsky
                        offer:
                          description: Roma - Berlino, Classe Premium
                          code: "1234"
                        date: 2021-03-04, 21:25 CET
                        links:
                          self: /message/mariorossi/0
                          next: /message/mariorossi/1
                          prev: /message/mariorossi/0
                      - sender: ACMEsky
                        body:
                          description: Roma - Parigi, Classe Base
                          code: "5678"
                        date: 2021-03-04, 21:25 CET
                        links:
                          self: /message/mariorossi/1
                          next: /message/mariorossi/2
                          prev: /message/mariorossi/0
                    links:
                      self: /message/mariorossi/from/0
                      next: /message/mariorossi/from/10
                      prev: /message/mariorossi/from/0
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "400":
          description: Bad Request
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
      security:
      - tokenSessione: []
      summary: Restituisci 10 messaggi del cliente
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
  /message/{username}/{messageid}:
    get:
      description: |-
        È la risorsa che, a fronte di una richiesta HTTP nella cui intestazione vi è un `token` identificativo valido, restituisce il messaggio con id pari al parametro di query `messageid` inviato al cliente il cui username è pari al parametro di query `username`.

        Il body della richiesta e della risposta HTTP è di tipo `application/vnd.api+json` in quanto l'API prontogramAPI è al livello 3 di modello di maturità di Richardson: nella risposta sono presenti anche i campi `links` per permettere l'esplorazione dinamica, come richiesto da RMML3.
      operationId: get_message_username_messageid
      parameters:
      - description: Username dell'utente
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: Id del messaggio
        explode: false
        in: path
        name: messageid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              examples:
                Esempio:
                  value:
                    data:
                      sender: ACMEsky
                      offer:
                        description: Roma - Berlino, Classe Premium
                        code: "1234"
                      date: 2021-03-04, 21:25 CET
                    links:
                      self: /message/mariorossi/1
                      next: /message/mariorossi/2
                      prev: /message/mariorossi/0
                    meta:
                      id: 1234
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
        "400":
          description: Bad Request
        "406":
          description: Not Acceptable
      security:
      - tokenSessione: []
      summary: Restituisci il messaggio del cliente
      tags:
      - Risorse
      x-openapi-router-controller: openapi_server.controllers.risorse_controller
components:
  parameters:
    AuthorizationOauth2:
      description: Il valore deve essere il token che il cliente ha ricevuto durante
        la registrazione, preceduto da `Bearer`
      explode: false
      in: header
      name: AuthorizationOauth2
      required: true
      schema:
        type: string
      style: simple
  requestBodies:
    inline_object:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    offerMessage:
      description: Parte del messaggio relativa all'offerta.
      properties:
        code:
          description: Codice identificativo della coppia cliente destinatario - offerta
          type: string
        description:
          description: Breve descrizione dell'offerta
          type: string
      title: offerMessage
      type: object
    Maps.v1_Credentials:
      properties:
        username:
          type: string
        password:
          type: string
      title: credentials
      type: object
    inline_response_200_links:
      description: Link a livello dei blocchi di messaggi
      properties:
        self:
          description: Link al blocco corrente
          type: string
        next:
          description: Link al blocco successivo in senso temporale
          type: string
        prev:
          description: Link al blocco precedente in senso temporale
          type: string
      type: object
    inline_response_200_message:
      properties:
        offer:
          $ref: '#/components/schemas/offerMessage'
        receiver:
          type: string
        date:
          type: string
        id:
          type: integer
      type: object
    inline_response_200_links_1:
      description: Link a livello dei singoli messaggiLink a livello dei singoli messaggi
      properties:
        self:
          description: Link al messaggio corrente
          type: string
        next:
          description: Link a messaggio successivo in senso temporale
          type: string
        prev:
          description: Link al messaggio precedente in senso temporale
          type: string
      type: object
    inline_response_200_data:
      properties:
        message:
          $ref: '#/components/schemas/inline_response_200_message'
        links:
          $ref: '#/components/schemas/inline_response_200_links_1'
      type: object
    inline_response_200:
      properties:
        links:
          $ref: '#/components/schemas/inline_response_200_links'
        data:
          items:
            $ref: '#/components/schemas/inline_response_200_data'
          type: array
      type: object
    _createmessage_data:
      properties:
        receiver:
          type: string
        offer:
          $ref: '#/components/schemas/offerMessage'
      type: object
    inline_object:
      properties:
        data:
          $ref: '#/components/schemas/_createmessage_data'
      type: object
    inline_response_200_1_data_links:
      description: Link a livello dei singoli messaggi
      properties:
        self:
          description: Link a messaggio corrente
          type: string
        next:
          description: Link a messaggio successivo in senso temporale
          type: string
        prev:
          description: Link a messaggio precedente in senso temporale
          type: string
      type: object
    inline_response_200_1_data_message:
      properties:
        offer:
          $ref: '#/components/schemas/offerMessage'
        date:
          type: string
        links:
          $ref: '#/components/schemas/inline_response_200_1_data_links'
        id:
          type: integer
      type: object
    inline_response_200_1_data:
      properties:
        message:
          items:
            $ref: '#/components/schemas/inline_response_200_1_data_message'
          type: array
      type: object
    inline_response_200_1_links:
      description: Link a livello dei blocchi di messaggi
      properties:
        self:
          description: Link al blocco corrente in senso temporale
          type: string
        next:
          description: Link al blocco successivo in senso temporale
          type: string
        prev:
          description: Link al blocco precedente in senso temporale
          type: string
      type: object
    inline_response_200_1:
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_1_data'
        links:
          $ref: '#/components/schemas/inline_response_200_1_links'
      type: object
    inline_response_200_2_data:
      properties:
        offer:
          $ref: '#/components/schemas/offerMessage'
        date:
          type: string
        id:
          type: integer
      type: object
    inline_response_200_2_links:
      properties:
        self:
          description: Link al messaggio corrente
          type: string
        next:
          description: Link a messaggio successivo in senso temporale
          type: string
        prev:
          description: Link a messaggio precedente in senso temporale
          type: string
      type: object
    inline_response_200_2:
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_2_data'
        links:
          $ref: '#/components/schemas/inline_response_200_2_links'
      type: object
    inline_response_200_3:
      example:
        expiration_date: expiration_date
        token: token
      properties:
        token:
          type: string
        expiration_date:
          type: string
      type: object
  securitySchemes:
    tokenSessione:
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller_.info_from_tokenSessione
