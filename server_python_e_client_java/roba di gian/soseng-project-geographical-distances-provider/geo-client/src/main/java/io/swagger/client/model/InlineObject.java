/*
 * fornitoreDistanzeAPI
 * Ãˆ l'API RESTful offerta dal *Fornitore delle distanze geografiche* che, come suggerisce il nome, vi racchiude la capability di calcolare la distanza tra due posizioni geografiche.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-20T15:59:43.934+02:00[Europe/Rome]")
public class InlineObject {
  @SerializedName("pointA")
  private String pointA = null;

  @SerializedName("pointsB")
  private List<String> pointsB = null;

  public InlineObject pointA(String pointA) {
    this.pointA = pointA;
    return this;
  }

   /**
   * Punto geografico di partenza
   * @return pointA
  **/
  @Schema(description = "Punto geografico di partenza")
  public String getPointA() {
    return pointA;
  }

  public void setPointA(String pointA) {
    this.pointA = pointA;
  }

  public InlineObject pointsB(List<String> pointsB) {
    this.pointsB = pointsB;
    return this;
  }

  public InlineObject addPointsBItem(String pointsBItem) {
    if (this.pointsB == null) {
      this.pointsB = new ArrayList<String>();
    }
    this.pointsB.add(pointsBItem);
    return this;
  }

   /**
   * Array di punti geografici di destinazione
   * @return pointsB
  **/
  @Schema(description = "Array di punti geografici di destinazione")
  public List<String> getPointsB() {
    return pointsB;
  }

  public void setPointsB(List<String> pointsB) {
    this.pointsB = pointsB;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject inlineObject = (InlineObject) o;
    return Objects.equals(this.pointA, inlineObject.pointA) &&
        Objects.equals(this.pointsB, inlineObject.pointsB);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pointA, pointsB);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject {\n");
    
    sb.append("    pointA: ").append(toIndentedString(pointA)).append("\n");
    sb.append("    pointsB: ").append(toIndentedString(pointsB)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
